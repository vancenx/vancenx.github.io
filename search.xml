<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL 基础-查询语句</title>
      <link href="/2019/04/02/mysql-ji-chu-cha-xun-yu-ju/"/>
      <url>/2019/04/02/mysql-ji-chu-cha-xun-yu-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="1-导入数据库"><a href="#1-导入数据库" class="headerlink" title="1.导入数据库"></a>1.导入数据库</h2><blockquote><p>参考教程：<a href="https://www.yiibai.com/mysql/how-to-load-sample-database-into-mysql-database-server.html" target="_blank" rel="noopener">https://www.yiibai.com/mysql/how-to-load-sample-database-into-mysql-database-server.html</a>  </p></blockquote><h2 id="2-SQL是什么？MySQL是什么？"><a href="#2-SQL是什么？MySQL是什么？" class="headerlink" title="2.SQL是什么？MySQL是什么？"></a>2.SQL是什么？MySQL是什么？</h2><ul><li><p>SQL代表结构化查询语言(<strong>Structured Query Language</strong>)。SQL是用于访问数据库的标准化语言。</p></li><li><p>MySQL是一个数据库管理系统，也是一个关系数据库。</p></li></ul><h2 id="3-查询语句-SELECT-FROM"><a href="#3-查询语句-SELECT-FROM" class="headerlink" title="3.查询语句 SELECT FROM"></a>3.查询语句 SELECT FROM</h2><ul><li>语句解释：SELECT 语句用于从表中选取数据。结果被存储在一个结果表中（称为结果集）。</li><li>去重语句：关键词 DISTINCT 用于返回唯一不同的值。语法为： SELECT DISTINCT 列名称 FROM 表名称</li><li>前N个语句：使用 LIMIT 属性来设定返回的记录数。</li><li>CASE…END判断语句：检查表达式的值与一组唯一值的匹配。</li></ul><h2 id="4-筛选语句-WHERE"><a href="#4-筛选语句-WHERE" class="headerlink" title="4.筛选语句 WHERE"></a>4.筛选语句 WHERE</h2><ul><li><p>语句解释：WHERE子句允许根据指定的过滤表达式或条件来指定要选择的行。</p></li><li><p>运算符：</p><p>| 操作符 | 描述                                                         | 实例                 |<br>| :—– | :———————————————————– | :——————- |<br>| =      | 等号，检测两个值是否相等，如果相等返回true                   | (A = B) 返回false。  |<br>| &lt;&gt;, != | 不等于，检测两个值是否相等，如果不相等返回true               | (A != B) 返回 true。 |<br>| &gt;      | 大于号，检测左边的值是否大于右边的值, 如果左边的值大于右边的值返回true | (A &gt; B) 返回false。  |<br>| &lt;      | 小于号，检测左边的值是否小于右边的值, 如果左边的值小于右边的值返回true | (A &lt; B) 返回 true。  |<br>| &gt;=     | 大于等于号，检测左边的值是否大于或等于右边的值, 如果左边的值大于或等于右边的值返回true | (A &gt;= B) 返回false。 |<br>| &lt;=     | 小于等于号，检测左边的值是否小于于或等于右边的值, 如果左边的值小于或等于右边的值返回true | (A &lt;= B) 返回 true。 |</p></li></ul><h2 id="5-分组语句-GROUP-BY"><a href="#5-分组语句-GROUP-BY" class="headerlink" title="5.分组语句 GROUP BY"></a>5.分组语句 GROUP BY</h2><ul><li>聚集函数:count() 计数，sum() 求和，avg() 平均数，max() 最大值，min() 最小值等</li><li>语句解释：GROUP表示分组，BY后面写字段名，就表示根据哪个字段进行分组，GROUP BY必须得配合聚合函数来用，分组之后你可以计数（COUNT），求和（SUM），求平均数（AVG）等。</li><li>HAVING子句：提到GROUP BY 我们就不得不提到HAVING，HAVING相当于条件筛选，但它与WHERE筛选不同，HAVING是对于GROUP BY对象进行筛选。</li></ul><h2 id="6-排序语句-ORDER-BY"><a href="#6-排序语句-ORDER-BY" class="headerlink" title="6.排序语句 ORDER BY"></a>6.排序语句 ORDER BY</h2><ul><li>语句解释: SELECT prod_name FROM Products ORDER BY prod_name（对prod_name列以字母顺序排序数据）</li><li>正序、逆序：DESC降序，默认升序（ASC）</li></ul><h2 id="7-函数"><a href="#7-函数" class="headerlink" title="7.函数"></a>7.函数</h2><blockquote><p>参考：<a href="http://www.runoob.com/mysql/mysql-functions.html" target="_blank" rel="noopener">http://www.runoob.com/mysql/mysql-functions.html</a></p></blockquote><h2 id="8-SQL注释"><a href="#8-SQL注释" class="headerlink" title="8.SQL注释"></a>8.SQL注释</h2><ul><li>SQL语句中的单行注释使用 –</li><li>SQL语句中的多行注释采用 /<em>…</em>/</li></ul><h2 id="9-SQL代码规范"><a href="#9-SQL代码规范" class="headerlink" title="9.SQL代码规范"></a>9.SQL代码规范</h2><ul><li><p>[SQL编程格式的优化建议] <a href="https://zhuanlan.zhihu.com/p/27466166" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/27466166</a></p></li><li><p>[SQL Style Guide] <a href="https://www.sqlstyle.guide/" target="_blank" rel="noopener">https://www.sqlstyle.guide/</a></p></li></ul><h2 id="项目一：查找重复的电子邮箱（难度：简单）"><a href="#项目一：查找重复的电子邮箱（难度：简单）" class="headerlink" title="项目一：查找重复的电子邮箱（难度：简单）"></a>项目一：查找重复的电子邮箱（难度：简单）</h2><p>创建 email表，并插入如下三行数据<br>+—-+———+<br>| Id | c   |<br>+—-+———+<br>| 1  | <a href="mailto:a@b.com" target="_blank" rel="noopener">a@b.com</a> |<br>| 2  | <a href="mailto:c@d.com" target="_blank" rel="noopener">c@d.com</a> |<br>| 3  | <a href="mailto:a@b.com" target="_blank" rel="noopener">a@b.com</a> |<br>+—-+———+</p><p>编写一个 SQL 查询，查找 Email 表中所有重复的电子邮箱。<br>根据以上输入，你的查询应返回以下结果：<br>+———+<br>| Email   |<br>+———+<br>| <a href="mailto:a@b.com" target="_blank" rel="noopener">a@b.com</a> |<br>+———+<br>说明：所有电子邮箱都是小写字母。</p><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><ol><li>创建表</li></ol><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE email (ID INT NOT NULL PRIMARY KEY,Email VARCHAR(255));</code></pre><ol start="2"><li>插入数据</li></ol><pre class=" language-mysql"><code class="language-mysql">INSERT INTO email VALUES('1','a@b.com');INSERT INTO email VALUES('2','c@d.com');INSERT INTO email VALUES('3','a@b.com');</code></pre><ol start="3"><li>查询语句</li></ol><pre class=" language-mysql"><code class="language-mysql">SELECT Email FROM email GROUP BY Email HAVING COUNT(Email)>1</code></pre><h2 id="项目二：查找大国（难度：简单）"><a href="#项目二：查找大国（难度：简单）" class="headerlink" title="项目二：查找大国（难度：简单）"></a>项目二：查找大国（难度：简单）</h2><p>创建如下 World 表<br>+—————–+————+————+————–+—————+<br>| name            | continent  | area       | population   | gdp           |<br>+—————–+————+————+————–+—————+<br>| Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |<br>| Albania         | Europe     | 28748      | 2831741      | 12960000      |<br>| Algeria         | Africa     | 2381741    | 37100000     | 188681000     |<br>| Andorra         | Europe     | 468        | 78115        | 3712000       |<br>| Angola          | Africa     | 1246700    | 20609294     | 100990000     |<br>+—————–+————+————+————–+—————+<br>如果一个国家的面积超过300万平方公里，或者(人口超过2500万并且gdp超过2000万)，那么这<br>编写一个SQL查询，输出表中所有大国家的名称、人口和面积。<br>例如，根据上表，我们应该输出:<br>+————–+————-+————–+<br>| name         | population  | area         |<br>+————–+————-+————–+<br>| Afghanistan  | 25500100    | 652230       |<br>| Algeria      | 37100000    | 2381741      |<br>+————–+————-+————–+</p><ol><li>创建表</li></ol><pre class=" language-mysql"><code class="language-mysql">CREATE TABLE World (name VARCHAR(50) NOT NULL,continent VARCHAR(50) NOT NULL,area INT NOT NULL,population INT NOT NULL,gdp INT NOT NULL);</code></pre><ol start="2"><li>插入数据</li></ol><pre class=" language-mysql"><code class="language-mysql">INSERT INTO World  VALUES('Afghanistan','Asia',652230,25500100,20343000);INSERT INTO World   VALUES('Albania','Europe',28748,2831741,12960000);INSERT INTO World   VALUES('Algeria','Africa',2381741,37100000,188681000);INSERT INTO World  VALUES('Andorra','Europe',468,78115,3712000);INSERT INTO World  VALUES('Angola','Africa',1246700,20609294,100990000);</code></pre><ol start="3"><li>查询语句<pre class=" language-mysql"><code class="language-mysql">SELECT name, population, areaFROM WorldWHERE area > 3000000 or population > 25000000</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> -MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 软件安装及数据库基础</title>
      <link href="/2019/03/31/mysql-ruan-jian-an-zhuang-ji-shu-ju-ku-ji-chu/"/>
      <url>/2019/03/31/mysql-ruan-jian-an-zhuang-ji-shu-ju-ku-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL的安装与配置"><a href="#MySQL的安装与配置" class="headerlink" title="MySQL的安装与配置"></a>MySQL的安装与配置</h2><blockquote><p>参考教程 <a href="http://www.runoob.com/mysql/mysql-install.html" target="_blank" rel="noopener">http://www.runoob.com/mysql/mysql-install.html</a>  </p></blockquote><p><strong>注意事项：</strong></p><ol><li>若使用浏览器下载安装包时速度过慢，可使用多线程下载工具（如 IDM），或者去国内开源镜像站下载（如网易开源镜像站）</li><li>使用记事本创建 my.ini 配置文件（创建完之后把后缀名改为.ini）；设置mysql的安装目录时，basedir=解压后的文件夹目录，并使用双反斜杠(如 basedir=C:\\web\\mysql-8.0.11)</li><li><p>启动 MySQL 数据库时必须以管理员身份打开 cmd 或者Windows PowerShell</p></li><li><p>初始化数据库之后得到的初始密码记得复制保存</p></li></ol><p>安装成功效果如图：</p><p><img src="https://raw.githubusercontent.com/vancenx/mdpic/master/20190331185909.png" alt></p><p>登录成功效果如图：</p><p><img src="https://raw.githubusercontent.com/vancenx/mdpic/master/20190331190031.png" alt></p><h2 id="数据库基础知识"><a href="#数据库基础知识" class="headerlink" title="数据库基础知识"></a>数据库基础知识</h2><ul><li><strong>数据库</strong>（Database）是按照数据结构来组织、存储和管理数据的仓库。</li><li><p><strong>关系型数据库</strong>，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。特点如下：</p><ol><li>数据以表格的形式出现</li><li>每行为各种记录名称</li><li>每列为记录名称所对应的数据域</li><li>许多的行和列组成一张表单</li><li>若干的表单组成database</li></ol></li><li><p><strong>数据表:</strong> 表是数据的矩阵。在一个数据库中的表看起来像一个简单的电子表格。</p></li><li><strong>列:</strong> 一列(数据元素) 包含了相同的数据, 例如邮政编码的数据。</li><li><strong>行：</strong>一行（=元组，或记录）是一组相关的数据，例如一条用户订阅的数据。</li><li><strong>冗余</strong>：存储两倍数据，冗余降低了性能，但提高了数据的安全性。</li><li><strong>主键</strong>：主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。</li><li><strong>外键：</strong>外键用于关联两个表。</li><li><strong>视图</strong>：数据库中的视图是一个虚拟表，但它同真实表一样，包含一系列带有名称的行和列数据。行和列数据来自由定义视图查询所引用的表，并且在应用视图时动态生成。</li><li><strong>存储过程</strong>：是一种在数据库中存储复杂程序，以便外部程序调用的一种数据库对象。存储过程是为了完成特定功能的SQL语句集，经编译创建并保存在数据库中，用户可通过指定存储过程的名字并给定参数(需要时)来调用执行。</li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/03/29/hello-world/"/>
      <url>/2019/03/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
